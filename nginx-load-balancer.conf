events {
    worker_connections 1024;
}

http {
    # Basic settings
    include /etc/nginx/mime.types;
    default_type application/octet-stream;
    sendfile on;
    keepalive_timeout 65;
    
    # Gzip compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_proxied any;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/javascript
        application/xml+rss
        application/json
        image/svg+xml;

    # Define upstream servers (your app instances)
    upstream restaurant_app_cluster {
        # Load balancing method
        least_conn;
        
        # Your two app instances
        server restaurant-app-1:80 max_fails=3 fail_timeout=30s;
        server restaurant-app-2:80 max_fails=3 fail_timeout=30s;
    }

    # Main server block
    server {
        listen 80;
        server_name _;  # Accept any hostname (your public IP)
        
        # Security headers
        add_header X-Frame-Options "SAMEORIGIN" always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header X-XSS-Protection "1; mode=block" always;
        add_header Referrer-Policy "strict-origin-when-cross-origin" always;
        
        # Main location - proxy to your app cluster
        location / {
            proxy_pass http://restaurant_app_cluster;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Timeouts
            proxy_connect_timeout 30s;
            proxy_send_timeout 30s;
            proxy_read_timeout 30s;
            
            # Buffer settings for better performance
            proxy_buffering on;
            proxy_buffer_size 4k;
            proxy_buffers 8 4k;
            
            # Handle client disconnections gracefully
            proxy_ignore_client_abort off;
        }
        
        # Health check endpoint
        location /health {
            access_log off;
            return 200 "Load balancer healthy\n";
            add_header Content-Type text/plain;
        }
        
        # Load balancer status (optional - for monitoring)
        location /lb-status {
            stub_status on;
            access_log off;
            allow 127.0.0.1;
            allow 10.0.0.0/8;
            allow 172.16.0.0/12;
            allow 192.168.0.0/16;
            deny all;
        }
    }

    # Logging
    access_log /var/log/nginx/access.log;
    error_log /var/log/nginx/error.log warn;
}