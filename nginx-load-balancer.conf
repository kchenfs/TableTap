events {
    worker_connections 1024;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;
    sendfile on;
    keepalive_timeout 65;

    resolver 127.0.0.11 valid=30s;
    
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                   '$status $body_bytes_sent "$http_referer" '
                   '"$http_user_agent" "$http_x_forwarded_for"';
    
    access_log /var/log/nginx/access.log main;
    error_log /var/log/nginx/error.log warn;
    
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_types text/plain text/css text/xml text/javascript application/javascript application/xml+rss application/json;

    # ==================================
    # == TAKE-OUT DOMAIN CONFIGURATION ==
    # ==================================
    server {
        listen 80;
        server_name take-out.momotarosushi.ca;
        
        location /.well-known/acme-challenge/ {
             root /var/www/certbot;
        }
        location / {
            return 301 https://$host$request_uri;
        }
    }

    server {
        listen 443 ssl http2;
        server_name take-out.momotarosushi.ca;

        ssl_certificate /etc/letsencrypt/live/take-out.momotarosushi.ca/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/take-out.momotarosushi.ca/privkey.pem;
        
        add_header X-Frame-Options "SAMEORIGIN" always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header Referrer-Policy "strict-origin-when-cross-origin" always;

        location / {
            proxy_pass http://takeout:80;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }

    # ================================
    # == DINE-IN DOMAIN CONFIGURATION ==
    # ================================
    server {
        listen 80;
        server_name dine-in.momotarosushi.ca;
        
        location /.well-known/acme-challenge/ {
             root /var/www/certbot;
        }
        location / {
            return 301 https://$host$request_uri;
        }
    }

    server {
        listen 443 ssl http2;
        server_name dine-in.momotarosushi.ca;

        ssl_certificate /etc/letsencrypt/live/dine-in.momotarosushi.ca/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/dine-in.momotarosushi.ca/privkey.pem;
        
        add_header X-Frame-Options "SAMEORIGIN" always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header Referrer-Policy "strict-origin-when-cross-origin" always;
        
        # This location block handles specific table routes first.
        # The regex is updated to handle URLs with or without a trailing slash.
        location ~ ^/table-([1-9]|10|11) {
            set $table_service table-$1;
            proxy_pass http://$table_service:80/;

            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
        }

        # This "catch-all" block handles the landing page and any other requests.
        location / {
            proxy_pass http://table-1:80;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }
}